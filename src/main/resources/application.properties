productservice.type=fakeStoreProductService
server.port=3000
#hashmap key:value
#FakeStore Config values
fakestore.api.url=https://fakestoreapi.com
fakestore.api.paths.product=/products
server.error.include-stacktrace=never
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.ddl-auto=validate
spring.datasource.url=jdbc:mysql://localhost:3306/sep23productservice
spring.datasource.username=sep23productservice
#spring.datasource.password=ThePassword -> since there was no password set while creating DB
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql: true
#while executing query that gets printed in the terminal
logging.level.org.springframework.security=trace
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9000


#productservice.type=fakeStoreProductService
#server.port=3000
##hashmap key:value
##FakeStore Config values
#fakestore.api.url=https://fakestoreapi.com
#fakestore.api.paths.product=/products
#server.error.include-stacktrace=never
##spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=validate
##spring.datasource.url=jdbc:mysql://databse-productservice.copnfrxgvmki.ap-south-1.rds.amazonaws.com:3306/productservice
##Below parametrized values Coming from AWS
#spring.datasource.url=${DATABASE_URL}
#spring.datasource.username=${DATABASE_USERNAME}
#spring.datasource.password=${DATABASE_PASSWORD}
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.show-sql: true
##while executing query that gets printed in the terminal
#logging.level.org.springframework.security=trace
##spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9000
#spring.security.oauth2.resourceserver.jwt.issuer-uri=${ISSUER_URI}
